name: Release [demand]
on:
  workflow_dispatch:
    # TODO add input for pre-calculated version

jobs:
  merge-to-main:
    runs-on: ubuntu-latest
    env:
      source_branch: "develop"  # move to repo variables
      target_branch: "main"  # move to repo variables

    outputs:
      latest_release: ${{ steps.get_latest_release.outputs.LATEST_RELEASE }}

    steps:
      - name: ⬇️ Checkout ${{ env.target_branch }}
        uses: actions/checkout@v4
        with:
          ref: ${{ env.target_branch }}
          fetch-depth: 0

      - name: Get Latest Release
        id: get_latest_release
        run: |
          LATEST_RELEASE=$(curl -s https://api.github.com/repos/${{ github.repository }}/releases/latest | jq -r '.tag_name')
          echo "Latest release version: $LATEST_RELEASE"
          echo "LATEST_RELEASE=$LATEST_RELEASE" >> $GITHUB_OUTPUT

      - name: 🔑 Set Bot Authentication
        run: |
          git config --global user.email "${{ secrets.CI_EMAIL }}"
          git config --global user.name "${{ secrets.CI_USER }}"

      - name: 🔀 Merge ${{ env.source_branch }} -> ${{ env.target_branch }}
        run: |
          git pull origin ${{ env.source_branch }}
          git merge --no-ff origin/${{ env.source_branch }} -m "[Automated] Merged ${{ env.source_branch }} -> ${{ env.target_branch }}"

      - name: 🔏 Push to protected main branch
        uses: CasperWA/push-protected@v2.15.0
        with:
          token: ${{ secrets.YNPUT_BOT_TOKEN }}
          branch: ${{ env.target_branch }}
          tags: true
          unprotect_reviews: true

  update-develop:
    runs-on: ubuntu-latest
    needs: merge-to-main
    env:
      source_branch: "main"  # move to repo variables
      target_branch: "develop"  # move to repo variables

    steps:
      - name: ⬇️ Checkout ${{ env.target_branch }}
        uses: actions/checkout@v4
        with:
          ref: ${{ env.target_branch }}
          fetch-depth: 0

      - name: 🔑 Set Bot Authentication
        run: |
          # INFO might also require bit token first
          git config --global user.email "${{ secrets.CI_EMAIL }}"
          git config --global user.name "${{ secrets.CI_USER }}"

      - name: 🔁 Merge ${{ env.source_branch }} -> ${{ env.target_branch }}
        run: |
          git pull origin ${{ env.source_branch }}
          git merge origin/${{ env.source_branch }} -m "[Automated] Merged ${{ env.source_branch }} -> ${{ env.target_branch }}"
          git push origin ${{ env.target_branch }}

  create-release:
    runs-on: ubuntu-latest
    needs: merge-to-main
    env:
      source_branch: "main"  # move to repo variables
      target_branch: "develop"  # move to repo variables
      NEXT_VERSION: ${{ needs.merge-to-main.outputs.latest_release }}
      changelog: "Updates Palceholder"
    
    steps:
      - name: Show current version
        run: |
          echo ${{ env.NEXT_VERSION }}

      # - name: 🚀 Github Release
      #   uses: ncipollo/release-action@v1
      #   with:
      #     tag: ${{ env.NEXT_VERSION }}
      #     body: ${{ env.changelog }}
      #     token: ${{ secrets.YNPUT_BOT_TOKEN }}

