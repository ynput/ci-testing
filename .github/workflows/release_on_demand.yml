name: Release [demand]
# TODO research using the github api instead of cloning repo
on:
  workflow_dispatch:
    # TODO add input for pre-calculated version

env:
  zip_file: artifacts.zip
  tar_file: artifacts.tar.gz
  zip_artifact: "test-zip"
  tar_artifact: "test-tar"

jobs:
  show_data:
    runs-on: ubuntu-latest
    steps:
      - name: Display GitHub Context Variables
        run: |
          echo "Event Name: ${{ github.event_name }}"
          echo "Actor: ${{ github.actor }}"
          echo "Repository: ${{ github.repository }}"
          echo "Commit SHA: ${{ github.sha }}"
          echo "Git Ref Name: ${{ github.ref_name }}"

  merge-to-main:
    runs-on: ubuntu-latest
    env:
      source_branch: "develop"  # move to repo variables
      target_branch: "main"  # move to repo variables

    steps:
      - name: ⬇️ Checkout ${{ env.target_branch }}
        uses: actions/checkout@v4
        with:
          ref: ${{ env.target_branch }}
          fetch-depth: 0

      - name: 🔑 Set Bot Authentication
        run: |
          git config --global user.email "${{ secrets.CI_EMAIL }}"
          git config --global user.name "${{ secrets.CI_USER }}"

      - name: 🔀 Merge ${{ env.source_branch }} -> ${{ env.target_branch }}
        run: |
          git pull origin ${{ env.source_branch }}
          git merge --no-ff origin/${{ env.source_branch }} -m "[Automated] Merged ${{ env.source_branch }} -> ${{ env.target_branch }}"

      - name: 🔏 Push to protected main branch
        uses: CasperWA/push-protected@v2.15.0
        with:
          token: ${{ secrets.YNPUT_BOT_TOKEN }}
          branch: ${{ env.target_branch }}
          tags: true
          unprotect_reviews: true


  build-from-main:
    runs-on: ubuntu-latest
    needs: merge-to-main
    env:
      target_branch: "main"  # move to repo variables

    steps:
      - name: ⬇️ Checkout ${{ env.target_branch }}
        uses: actions/checkout@v4
        with:
          ref: ${{ env.target_branch }}
          fetch-depth: 0

      # INFO placeholder artifact for repo-dependent modification
      - name: Create artifacts
        run: |
          zip -r ${{ env.zip_file }} . -x "*/\.*"
          tar -czvf ${{ env.tar_file }} --exclude=".*" .
      
      - name: 🔼 Upload zip artifacts
        uses: actions/upload-artifact@v4
        with:
          name: ${{ env.zip_artifact }}
          path: |
            ${{ env.zip_file }}

      - name: 🔼 Upload tar.gz artifacts
        uses: actions/upload-artifact@v4
        with:
          name: ${{ env.tar_artifact }}
          path: |
            ${{ env.tar_file }}


  update-develop:
    runs-on: ubuntu-latest
    needs: merge-to-main
    env:
      source_branch: "main"  # move to repo variables
      target_branch: "develop"  # move to repo variables

    steps:
      - name: ⬇️ Checkout ${{ env.target_branch }}
        uses: actions/checkout@v4
        with:
          ref: ${{ env.target_branch }}
          fetch-depth: 0

      - name: 🔑 Set Bot Authentication
        run: |
          # INFO might also require bit token first
          git config --global user.email "${{ secrets.CI_EMAIL }}"
          git config --global user.name "${{ secrets.CI_USER }}"

      - name: 🔁 Merge ${{ env.source_branch }} -> ${{ env.target_branch }}
        run: |
          git pull origin ${{ env.source_branch }}
          git merge origin/${{ env.source_branch }} -m "[Automated] Merged ${{ env.source_branch }} -> ${{ env.target_branch }}"
          git push origin ${{ env.target_branch }}


  create-release:
    runs-on: ubuntu-latest
    needs: 
      - build-from-main
    env:
      source_branch: "main"  # move to repo variables
      target_branch: "develop"  # move to repo variables

    steps:
      # TODO dive into the action as reference to implement custom actions
      - name: 🔼 Get next version
        uses: reecetech/version-increment@2024.4.4
        id: version
        with:
          scheme: semver
          increment: patch
          release_branch: main
          use_api: true

      - name: 🔽 Download zip artifacts
        uses: actions/download-artifact@v4
        with:
          name: ${{ env.zip_artifact }}
      
      - name: 🔽 Download tar artifacts
        uses: actions/download-artifact@v4
        with:
          name: ${{ env.tar_artifact }}

      - name: 🚀 Github Release
        uses: ncipollo/release-action@v1
        with:
          tag: ${{ env.major }}.${{ env.minor }}.${{ env.patch }}
          generateReleaseNotes: true
          artifacts: ${{ env.zip_file }}, ${{ env.tar_file }}
          token: ${{ secrets.YNPUT_BOT_TOKEN }}
          draft: true
        env:
          major: ${{ steps.version.outputs.major-version }}
          minor: ${{ steps.version.outputs.minor-version }}
          patch: ${{ steps.version.outputs.patch-version }}

      # TODO test if new release version exists
