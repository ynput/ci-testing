name: Release [demand]
# TODO research using the github api instead of cloning repo
on:
  workflow_dispatch:
    # TODO add input for pre-calculated version

jobs:
  merge-to-main:
    runs-on: ubuntu-latest
    env:
      source_branch: "develop"  # move to repo variables
      target_branch: "main"  # move to repo variables

    outputs:
      next_release: ${{ steps.version.outputs.version }}

    steps:
      - name: ⬇️ Checkout ${{ env.target_branch }}
        uses: actions/checkout@v4
        with:
          ref: ${{ env.target_branch }}
          fetch-depth: 0

      - name: 🔑 Set Bot Authentication
        run: |
          git config --global user.email "${{ secrets.CI_EMAIL }}"
          git config --global user.name "${{ secrets.CI_USER }}"

      - name: 🔀 Merge ${{ env.source_branch }} -> ${{ env.target_branch }}
        run: |
          git pull origin ${{ env.source_branch }}
          git merge --no-ff origin/${{ env.source_branch }} -m "[Automated] Merged ${{ env.source_branch }} -> ${{ env.target_branch }}"

      - name: 🔏 Push to protected main branch
        uses: CasperWA/push-protected@v2.15.0
        with:
          token: ${{ secrets.YNPUT_BOT_TOKEN }}
          branch: ${{ env.target_branch }}
          tags: true
          unprotect_reviews: true

  update-develop:
    runs-on: ubuntu-latest
    needs: merge-to-main
    env:
      source_branch: "main"  # move to repo variables
      target_branch: "develop"  # move to repo variables

    steps:
      - name: ⬇️ Checkout ${{ env.target_branch }}
        uses: actions/checkout@v4
        with:
          ref: ${{ env.target_branch }}
          fetch-depth: 0

      - name: 🔑 Set Bot Authentication
        run: |
          # INFO might also require bit token first
          git config --global user.email "${{ secrets.CI_EMAIL }}"
          git config --global user.name "${{ secrets.CI_USER }}"

      - name: 🔁 Merge ${{ env.source_branch }} -> ${{ env.target_branch }}
        run: |
          git pull origin ${{ env.source_branch }}
          git merge origin/${{ env.source_branch }} -m "[Automated] Merged ${{ env.source_branch }} -> ${{ env.target_branch }}"
          git push origin ${{ env.target_branch }}

  create-release:
    runs-on: ubuntu-latest
    needs: merge-to-main
    env:
      source_branch: "main"  # move to repo variables
      target_branch: "develop"  # move to repo variables
      NEXT_VERSION: ${{ needs.merge-to-main.outputs.next_release }}
      changelog: "Updates Palceholder"
    
    steps:
      - name: Get next version
        uses: reecetech/version-increment@2024.4.4
        id: version
        with:
          scheme: semver
          increment: patch
          release_branch: main

      - name: Show version
        run: |
          echo ${{ steps.version }}

      # - name: 🚀 Github Release
      #   uses: ncipollo/release-action@v1
      #   with:
      #     tag: ${{ env.NEXT_VERSION }}
      #     body: ${{ env.changelog }}
      #     token: ${{ secrets.YNPUT_BOT_TOKEN }}

      # TODO test if new releaseversion exists
