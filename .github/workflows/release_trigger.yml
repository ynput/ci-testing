name: Release [trigger]

on:
  push:
    branches:
      - develop
  workflow_dispatch:
    inputs:
      release-type:
        type: choice
        description: What release should be created
        options:
          - release
          - pre-release
        required: true

jobs:
  fetch-latest-tag:
    runs-on: ubuntu-latest
    outputs:
      latest_tag: ${{ steps.getLatestTag.outputs.latest_tag }}
    steps:
      - name: Checkout repository
        uses: actions/checkout@v3

      - name: Fetch all tags
        run: git fetch --tags

      - name: Get the latest tag
        id: getLatestTag
        run: echo "::set-output name=latest_tag::$(git describe --tags `git rev-list --tags --max-count=1`)"

      - name: Increment minor version
        id: incrementTag
        run: |
          latest_tag="${{ steps.getLatestTag.outputs.latest_tag }}"
          IFS='.' read -r -a parts <<< "$latest_tag"
          major="${parts[0]}"
          minor="${parts[1]}"
          patch="${parts[2]}"
          new_minor=$((minor + 1))
          new_tag="${major}.${new_minor}.0"
          echo "New tag: $new_tag"
          echo "::set-output name=new_tag::$new_tag"

      - name: Print new tag
        run: |
          echo "New tag: ${{ steps.incrementTag.outputs.new_tag }}"

  call-ci-tools-milestone-release:
    needs: fetch-latest-tag
    uses: ynput/ci-tools/.github/workflows/milestone_release_ref.yml@main
    with:
      milestone: ${{ needs.fetch-latest-tag.outputs.latest_tag }}
      repo-owner: ${{ github.event.repository.owner.login }}
      repo-name: ${{ github.event.repository.name }}
      version-py-path: "./openpype/version.py"
      pyproject-path: "./pyproject.toml"
    secrets:
      token: ${{ secrets.YNPUT_BOT_TOKEN }}
      user_email: ${{ secrets.CI_EMAIL }}
      user_name: ${{ secrets.CI_USER }}

