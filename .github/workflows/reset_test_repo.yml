name: Reset test repo

on:
  workflow_dispatch:

env:
  GH_TOKEN: ${{ secrets.TESTING_REPO_RESET }}
  TARGET_REPO: "ynput/ayon-addon-action-testing"
  TEMPLATE_REPO: "ynput/ayon-addon-template"

jobs:
  reset-test-repo:
    runs-on: ubuntu-latest

    steps:
      - name: Check for existing repo
        id: repo-check
        run: |
          if ! gh repo view "${{ env.TARGET_REPO }}" > /dev/null 2>&1; then
            echo "::error::Repository `${{ env.TARGET_REPO }}` doesn't exists - can't reset. Please create the repository first."
            echo "repo_present=false" >> $GITHUB_OUTPUT
            exit 1
          fi

          echo "repo_present=true" >> $GITHUB_OUTPUT
          exit 0

      - name: Delete repository if exists
        if: steps.repo-check.outputs.repo_present
        run: |
          echo "::notice:: Deleting repository `${{ env.TARGET_REPO }}`"
          gh repo delete "${{ env.TARGET_REPO }}" --yes

      - name: Create new Repo `${{ env.TARGET_REPO }}` from template `${{ env.TEMPLATE_REPO }}`
        run: |
          gh repo create ${{ env.TARGET_REPO }} --template ${{ env.TEMPLATE_REPO }} --public --include-all-branches
          echo "::notice::Recreated repository `${{ env.TARGET_REPO }}` from template `${{ env.TEMPLATE_REPO }}`"

      - name: Show branches
        run: |
          echo $(gh api repos/${{ env.TARGET_REPO }}/branches --jq '.[].name')

      - name: Checkout CI Tools repo
        uses: actions/checkout@v4
        with:
          repository: ${{ env.TARGET_REPO }}
          ref: develop
          path: "$(basename '${{ env.TARGET_REPO }}' .git)"

      - name: Adjust readme
        run: |
          # Add text to the beginning of README.md
          echo "Adding introductory text to README.md"
          echo -e "# Not intended for Development\nThis is a testing repository for github actions.\nChanges in this repository are likely to be reset by automanted testing procedures.\nDon't use this repository for any development - use ayon/ci-tools instead." > README.md

          git config user.name "${{ secrets.CI_USER }}"
          git config user.email "${{ secrets.CI_EMAIL }}"
          git add README.md

          # Commit and push changes
          git commit -m "Add warning information to readme."
          git push origin develop
